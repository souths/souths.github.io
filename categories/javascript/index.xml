<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on souths的博客</title>
    <link>https://souths.github.io/categories/javascript/</link>
    <description>Recent content in javascript on souths的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 21 Dec 2019 17:01:11 +0800</lastBuildDate>
    
	<atom:link href="https://souths.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>回到顶部或者让页面滚动平滑</title>
      <link>https://souths.github.io/post/%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E6%88%96%E8%80%85%E8%AE%A9%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E5%B9%B3%E6%BB%91/</link>
      <pubDate>Sat, 21 Dec 2019 17:01:11 +0800</pubDate>
      
      <guid>https://souths.github.io/post/%E5%9B%9E%E5%88%B0%E9%A1%B6%E9%83%A8%E6%88%96%E8%80%85%E8%AE%A9%E9%A1%B5%E9%9D%A2%E6%BB%9A%E5%8A%A8%E5%B9%B3%E6%BB%91/</guid>
      <description>&amp;lt;div id=&amp;quot;top31&amp;quot;&amp;gt; 以下是回到顶部代码 document.querySelector(`#top31`).scrollIntoView({ behavior: &amp;quot;smooth&amp;quot; }); CSS scroll-behavior和JS scrollIntoView让页面滚动平滑 https://www.zhangxinxu.com/wordpress/2018/10/scroll-behavior-scrollintoview-%E5%B9%B3%E6%BB%91%E6%BB%9A%E5%8A%A8/#</description>
    </item>
    
    <item>
      <title>For循环中拷贝对象给另外一个对象并添加到数组中</title>
      <link>https://souths.github.io/post/for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%E7%BB%99%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%95%B0%E7%BB%84%E4%B8%AD/</link>
      <pubDate>Sat, 01 Sep 2018 16:55:50 +0800</pubDate>
      
      <guid>https://souths.github.io/post/for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E6%8B%B7%E8%B4%9D%E5%AF%B9%E8%B1%A1%E7%BB%99%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E6%B7%BB%E5%8A%A0%E5%88%B0%E6%95%B0%E7%BB%84%E4%B8%AD/</guid>
      <description>var i,item,li,list=[]; for(i=0;i&amp;lt;imgList.length;i++){ item=imgList[i]; li={ compressImageName:item.smallImagePath, compressImagePath :item.smallImageUrl, originImageName : item.imagePath, originImagePath : item.imageUrl, seq :i, $$hashKey:item.$$hashKey, uuid:item.uuid }; list.push(li); } /*imgList是一个数组,数组里面是多个对象,把这多个对象拷贝到li对象中,li对象中是每个键</description>
    </item>
    
    <item>
      <title>Input表单中限制只能输入纯数字</title>
      <link>https://souths.github.io/post/input%E8%A1%A8%E5%8D%95%E4%B8%AD%E9%99%90%E5%88%B6%E5%8F%AA%E8%83%BD%E8%BE%93%E5%85%A5%E7%BA%AF%E6%95%B0%E5%AD%97/</link>
      <pubDate>Wed, 11 Jul 2018 17:00:21 +0800</pubDate>
      
      <guid>https://souths.github.io/post/input%E8%A1%A8%E5%8D%95%E4%B8%AD%E9%99%90%E5%88%B6%E5%8F%AA%E8%83%BD%E8%BE%93%E5%85%A5%E7%BA%AF%E6%95%B0%E5%AD%97/</guid>
      <description>&amp;lt;input class=&amp;quot;el-input__inner&amp;quot; v-model=&amp;quot;scope.row.total_num&amp;quot; @input=&amp;quot;pureNumber(scope.row)&amp;quot; placeholder=&amp;quot;请输入评分,纯数字&amp;quot;&amp;gt; pureNumber (row:any) { // 实时把非数字的输入过滤掉 row.total_num = row.total_num.match(/\d/ig) ? row.total_num.match(/\d/ig).join(&#39;&#39;) : &#39;&#39; }</description>
    </item>
    
    <item>
      <title>JS获取上一访问页面URL地址document</title>
      <link>https://souths.github.io/post/JS%E8%8E%B7%E5%8F%96%E4%B8%8A%E4%B8%80%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2URL%E5%9C%B0%E5%9D%80document.referrer%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sat, 05 May 2018 16:54:29 +0800</pubDate>
      
      <guid>https://souths.github.io/post/JS%E8%8E%B7%E5%8F%96%E4%B8%8A%E4%B8%80%E8%AE%BF%E9%97%AE%E9%A1%B5%E9%9D%A2URL%E5%9C%B0%E5%9D%80document.referrer%E5%AE%9E%E8%B7%B5/</guid>
      <description>http://www.zhangxinxu.com/wordpress/2017/02/js-page-url-document-refer</description>
    </item>
    
    <item>
      <title>FileReader与URL.createObjectURL实现图片、视频上传预览</title>
      <link>https://souths.github.io/post/FileReader%E4%B8%8EURL.createObjectURL%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E4%B8%8A%E4%BC%A0%E9%A2%84%E8%A7%88/</link>
      <pubDate>Tue, 10 Apr 2018 16:51:08 +0800</pubDate>
      
      <guid>https://souths.github.io/post/FileReader%E4%B8%8EURL.createObjectURL%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%A7%86%E9%A2%91%E4%B8%8A%E4%BC%A0%E9%A2%84%E8%A7%88/</guid>
      <description>&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt; &amp;lt;title&amp;gt;FileReader与URL.createObjectURL实现图片、视频上传预览&amp;lt;/titl</description>
    </item>
    
    <item>
      <title>JS的splice方法在for循环中使用可能会遇到的问题</title>
      <link>https://souths.github.io/post/JS%E7%9A%84splice%E6%96%B9%E6%B3%95%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 11 Mar 2016 16:57:50 +0800</pubDate>
      
      <guid>https://souths.github.io/post/JS%E7%9A%84splice%E6%96%B9%E6%B3%95%E5%9C%A8for%E5%BE%AA%E7%8E%AF%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%8F%AF%E8%83%BD%E4%BC%9A%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>在写JS代码时，我们常常使用 splice 函数来删除数组中的元素，因为 splice 函数会直接对数组进行修改，从而不需再自己写一个算法来移动数组中的其他元素填补到被</description>
    </item>
    
    <item>
      <title>SetTou一次定时器做循环使用</title>
      <link>https://souths.github.io/post/setTou%E4%B8%80%E6%AC%A1%E5%AE%9A%E6%97%B6%E5%99%A8%E5%81%9A%E5%BE%AA%E7%8E%AF%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 15 Jan 2016 16:47:35 +0800</pubDate>
      
      <guid>https://souths.github.io/post/setTou%E4%B8%80%E6%AC%A1%E5%AE%9A%E6%97%B6%E5%99%A8%E5%81%9A%E5%BE%AA%E7%8E%AF%E4%BD%BF%E7%94%A8/</guid>
      <description>var num = 5 var timer = &#39;&#39; fn() function fn() { timer = setTimeout(function () { num--; se.innerHTML = &amp;quot;&amp;quot;+num+&amp;quot;S 后返回&amp;quot; if(num==0){ clearTimeout(timer) return; } fn() },1000) }</description>
    </item>
    
    <item>
      <title>Jquery入口简单分析</title>
      <link>https://souths.github.io/post/jquery%E5%85%A5%E5%8F%A3%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90/</link>
      <pubDate>Sun, 20 Dec 2015 17:04:46 +0800</pubDate>
      
      <guid>https://souths.github.io/post/jquery%E5%85%A5%E5%8F%A3%E7%AE%80%E5%8D%95%E5%88%86%E6%9E%90/</guid>
      <description>var aQuery = function (selector, context) { return new aQuery.prototype.init(); } aQuery.prototype = { constructor: aQuery, init: function () { this.v = &#39;vvv&#39; console.log(this.age,&#39;=&amp;gt;age&#39;); // 20 =&amp;gt;age return this; }, name: function () { console.log(arguments); console.log(this.age); //20 console.log(this.v); // vv return this.age }, age: 20 } aQuery.prototype.init.prototype = aQuery.prototype; console.log(aQuery().name()) //20</description>
    </item>
    
    <item>
      <title>Jquery中实用技巧</title>
      <link>https://souths.github.io/post/jquery%E4%B8%AD%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Sun, 20 Dec 2015 17:03:00 +0800</pubDate>
      
      <guid>https://souths.github.io/post/jquery%E4%B8%AD%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>if语句一定要有大括号包裹, for中表达式写法 var array = [&#39;Java&#39;, &#39;Python&#39;, &#39;scala&#39;] for (let index = array.length - 1, element; (element = array[index]) != null; index--) { console.log(element, index) }</description>
    </item>
    
  </channel>
</rss>